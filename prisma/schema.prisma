generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement()) @map("id")
  username      String    @unique @map("username")
  email         String    @unique @map("email")
  passwordHash  String    @map("password_hash")
  fullName      String?   @map("full_name")
  roleId        Int       @map("role_id")
  role          Role      @relation(fields: [roleId], references: [id])
  dailyLogs     DailyLog[]
  activityLogs  ActivityLog[]
  reportRequests ReportRequest[]
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt       @map("updated_at")

  @@map("users")
}

model Role {
  id          Int       @id @default(autoincrement()) @map("id")
  name        String    @unique @map("name")
  description String?   @map("description")
  users       User[]

  @@map("roles")
}

model DailyLog {
  id            Int       @id @default(autoincrement()) @map("id")
  user          User      @relation(fields: [userId], references: [id])
  userId        Int       @map("user_id")
  logDate       DateTime  @map("log_date")
  isPresent     Boolean   @default(false) @map("is_present")
  binningCount  Int       @default(0) @map("binning_count")
  pickingCount  Int       @default(0) @map("picking_count")
  totalItems    Int       @map("total_items") // computed in service layer
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt       @map("updated_at")

  @@unique([userId, logDate])
  @@map("daily_logs")
}

model ActivityLog {
  id            Int       @id @default(autoincrement()) @map("id")
  user          User      @relation(fields: [userId], references: [id])
  userId        Int       @map("user_id")
  activityTime  DateTime  @default(now())  @map("activity_time")
  dataType      String    @map("data_type") // binning | picking | attendance
  status        String    @map("status") // success | failure
  changeHistory Json?     @map("change_history")

  @@map("activity_logs")
}

model Target {
  id             Int      @id @default(autoincrement()) @map("id")
  dailyTarget    Int      @map("daily_target")
  effectiveFrom  DateTime @map("effective_from")
  effectiveTo    DateTime? @map("effective_to")

  @@map("targets")
}

model WorkSchedule {
  id          Int   @id @default(autoincrement()) @map("id")
  dayOfWeek   Int   @map("day_of_week") // 1 = Monday â€¦ 7 = Sunday
  isWorkday   Boolean @default(true) @map("is_workday")

  @@map("work_schedules")
}

model Setting {
  id     Int    @id @default(autoincrement()) @map("id")
  key    String @unique @map("key")
  value  String @map("value")

  @@map("settings")
}

model ReportRequest {
  id            Int      @id @default(autoincrement()) @map("id")
  user          User     @relation(fields: [userId], references: [id])
  userId        Int      @map("user_id")
  startDate     DateTime @map("start_date")
  endDate       DateTime @map("end_date")
  reportType    String   @map("report_type") // daily | weekly | monthly
  exportFormat  String   @map("export_format") // excel | pdf
  emailTo       String?  @map("email_to")
  status        String   @map("status") // pending | sent | failed
  createdAt     DateTime @default(now()) @map("created_at")

  @@map("report_requests")
} 